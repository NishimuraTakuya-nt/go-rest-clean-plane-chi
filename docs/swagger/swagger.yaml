basePath: /api/v1
definitions:
  request.LoginRequest:
    description: LoginRequest is a struct that represents the request of login
    properties:
      password:
        type: string
      user_id:
        type: string
    type: object
  request.SampleDetail:
    description: Sample detail information
    properties:
      id:
        minimum: 1
        type: integer
      name:
        maxLength: 50
        minLength: 2
        type: string
      price:
        minimum: 1
        type: integer
    required:
    - id
    - name
    type: object
  request.SampleRequest:
    description: Sample information
    properties:
      array_val:
        items:
          type: string
        type: array
      email:
        example: test@example.com
        type: string
      id:
        description: 'refs: https://github.com/swaggo/swag#example-value-of-struct'
        type: string
      int_val:
        minimum: 1
        type: integer
      sample_detail_not_required:
        $ref: '#/definitions/request.SampleDetail'
      sample_detail_required:
        $ref: '#/definitions/request.SampleDetail'
      string_val:
        maxLength: 50
        minLength: 2
        type: string
    required:
    - int_val
    - sample_detail_required
    - string_val
    type: object
  response.ErrorResponse:
    description: Error response structure
    properties:
      details: {}
      message:
        type: string
      request_id:
        type: string
      status_code:
        type: integer
      type:
        type: string
    type: object
  response.ListSampleResponse:
    description: Sample list information
    properties:
      limit:
        type: integer
      offset:
        type: integer
      samples:
        items:
          $ref: '#/definitions/response.SampleResponse'
        type: array
      total_count:
        type: integer
    type: object
  response.LoginResponse:
    description: LoginResponse is a struct that represents the response of login
    properties:
      token:
        type: string
    type: object
  response.SampleResponse:
    description: Sample information
    properties:
      array_val:
        items:
          type: string
        type: array
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      int_val:
        type: integer
      string_val:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8081
info:
  contact: {}
  description: This is a sample server for a Go REST API using clean architecture.
  title: Go REST Clean API with Chi
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a JWT token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: User login
      tags:
      - authentication
  /healthcheck:
    get:
      description: Get the health status of the API
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Health check endpoint
      tags:
      - healthcheck
  /samples:
    get:
      consumes:
      - application/json
      description: Get a list of samples with pagination
      parameters:
      - default: 0
        description: Offset for pagination
        in: query
        minimum: 0
        name: offset
        type: integer
      - default: 100
        description: Limit for pagination
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ListSampleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List samples
      tags:
      - samples
    post:
      consumes:
      - application/json
      description: Create a new sample
      parameters:
      - description: Sample information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.SampleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SampleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Sample create
      tags:
      - samples
  /samples/{id}:
    get:
      consumes:
      - application/json
      description: Get details of a sample
      parameters:
      - description: Sample ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SampleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a sample by ID
      tags:
      - samples
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
